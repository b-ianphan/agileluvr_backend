package agileluvr.common.documents;

import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.experimental.SuperBuilder;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import javax.validation.constraints.NotBlank;
import java.util.List;

@Document("agile-project-listings")
@Data
@SuperBuilder
public class ProjectListingDocument {

    @ApiModelProperty(notes = "Unique ID generated by MongoDB")
    @Id
    private String id;

    @ApiModelProperty(notes = "ID of user who created the project", required = true)
    @NotBlank
    private String projectCreator;

    @ApiModelProperty(notes = "Name of project", required = true)
    @Indexed(name = "Project Name", unique = true)
    @NotBlank
    private String projectName;

    @ApiModelProperty(notes = "Description of project", required = true)
    @NotBlank
    private String projectDescription;

    @ApiModelProperty(notes = "Team size limit of project, max 6 programmers", required = true)
    private int teamSizeLimit;

    @ApiModelProperty(notes = "Limit of front end team size", required = true)
    private int frontEndSizeLimit;

    @ApiModelProperty(notes = "Limit of back end team size", required = true)
    private int backEndSizeLimit;

    @ApiModelProperty(notes = "IDs of members working on front end of this project", required = true)
    private List<String> frontEndMemberList;

    @ApiModelProperty(notes = "IDs of members working on back end of this project", required = true)
    private List<String> backEndMemberList;

    @ApiModelProperty(notes = "Will this project have a project manager?", required = true)
    private Boolean hasProjectManager;

    @ApiModelProperty(notes = "ID of Project Manager")
    private String projectManager;

}
